package com.lrfc.designpattern.structural.flyweight;

/**

 * Title:       [Learn — 设计模式]
 * Description: [享元模式]
 * Created on   2019年06月26日
 * @author 来日方长
 * @version db.0
 */
public class packageInfo {
	/**
	 *
	 *  提供了减少对象数量从而改善应用所需的对象结构的方式
	 *  运用共享技术有效的支持大量细粒度的对象
	 *  类型：结构型
	 *
	 *  适用场景:
	 *      常常应用于系统底层的开发，以便解决系统的性能问题
	 *      相同有大量的相似对象，需要缓冲池的场景
	 *
	 *  优点：
	 *      减少对象的创建，降低内存中的对象的数量，降低系统的内存，提高效率
	 *      较少内存之外的其他资源占用
	 *
	 *  缺点：
	 *      关注内/外部状态，关注线程安全问题
	 *      使系统，程序的逻辑复杂化
	 *
	 *
	 *  扩展：
	 *      内部状态 享元模式的属性，不会随外部的改变而改变
	 *      外部状态
	 *
	 *
	 *  相关设计模式
	 *      享元模式和代理模式
	 *      享元模式和单例模式
	 *
	 */
}
